apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  labels:
    app: postgres
data:
  POSTGRES_DB: postgresdb
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: password
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: default
spec:
  selector:
    matchLabels:
      app: postgres # has to match .spec.template.metadata.labels
  serviceName: "postgres"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: postgres # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: postgres
        image: postgres:14 # Sets Image
        imagePullPolicy: "IfNotPresent"
        ports:
          - containerPort: 5432
            name: postgres
        envFrom:
          - configMapRef:
             name: postgres-config
        volumeMounts:
        - name: postgres-claim
          mountPath: /var/postgress/data
      tolerations:
      - key: node.kubernetes.io/unreachable
        effect: NoSchedule
      - key: node.cloudprovider.kubernetes.io/shutdown
        effect: NoSchedule
      volumes:
        - name: postgres-claim
          persistentVolumeClaim:
            claimName: postgres-pv-claim
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-svc
  namespace: default
spec:
  selector:
    app: postgres
  type: NodePort
  sessionAffinity: None
  ports:
  - name: postgres
    protocol: TCP
    port: 5432
    targetPort: 5432
